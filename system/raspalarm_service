#!/bin/sh
### BEGIN INIT INFO
# Provides:          raspalarm
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the raspalarm server
# Description:       starts raspalarm using start-stop-daemon
### END INIT INFO

export PYTHONPATH=/home/pi/RaspAlarm:$PYTHONPATH

echo $PYTHONPATH

dir="/home/pi/RaspAlarm/raspalarm/web"
#user="pi"
user="root"
cmd="python __init__.py"

name=$(basename $dir)
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && [ -s "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
            sudo -u "$user" $cmd > "$stdout_log" 2> "$stderr_log" \
        & echo $! > "$pid_file"
        sleep 0.5
        if ! is_running; then
        echo "Unable to start, see $stdout_log and $stderr_log"
        echo "---------------- $stderr_log -------------------"
        cat "$stderr_log"
        exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo "Stopping $name"
        kill -1 `get_pid`
        > "$pid_file"
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    sleep 3
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
